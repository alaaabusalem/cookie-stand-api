// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cookie_stand.Data;

#nullable disable

namespace cookie_stand.Migrations
{
    [DbContext(typeof(CookiStandDB))]
    partial class CookiStandDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cookie_stand.Models.CookiStandHourlySale", b =>
                {
                    b.Property<int>("HourlySaleId")
                        .HasColumnType("int");

                    b.Property<int>("CookieStandId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("HourlySaleId", "CookieStandId");

                    b.HasIndex("CookieStandId");

                    b.ToTable("CookiStandHourlySales");
                });

            modelBuilder.Entity("cookie_stand.Models.CookieStand", b =>
                {
                    b.Property<int>("CookieStandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CookieStandId"));

                    b.Property<int>("Average_cookies_per_sale")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Maximum_customers_per_hour")
                        .HasColumnType("int");

                    b.Property<int>("Minimum_customers_per_hour")
                        .HasColumnType("int");

                    b.HasKey("CookieStandId");

                    b.ToTable("CookieStands");
                });

            modelBuilder.Entity("cookie_stand.Models.HourlySale", b =>
                {
                    b.Property<int>("HourlySaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HourlySaleId"));

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("HourlySaleId");

                    b.ToTable("HourlySales");

                    b.HasData(
                        new
                        {
                            HourlySaleId = 1,
                            Time = 6
                        },
                        new
                        {
                            HourlySaleId = 2,
                            Time = 7
                        },
                        new
                        {
                            HourlySaleId = 3,
                            Time = 8
                        },
                        new
                        {
                            HourlySaleId = 4,
                            Time = 9
                        },
                        new
                        {
                            HourlySaleId = 5,
                            Time = 10
                        },
                        new
                        {
                            HourlySaleId = 6,
                            Time = 11
                        },
                        new
                        {
                            HourlySaleId = 7,
                            Time = 12
                        },
                        new
                        {
                            HourlySaleId = 8,
                            Time = 1
                        },
                        new
                        {
                            HourlySaleId = 9,
                            Time = 2
                        },
                        new
                        {
                            HourlySaleId = 10,
                            Time = 3
                        },
                        new
                        {
                            HourlySaleId = 11,
                            Time = 4
                        },
                        new
                        {
                            HourlySaleId = 12,
                            Time = 5
                        },
                        new
                        {
                            HourlySaleId = 13,
                            Time = 6
                        },
                        new
                        {
                            HourlySaleId = 14,
                            Time = 7
                        });
                });

            modelBuilder.Entity("cookie_stand.Models.CookiStandHourlySale", b =>
                {
                    b.HasOne("cookie_stand.Models.CookieStand", "cookie_Stand")
                        .WithMany("cookiStandnHourlysales")
                        .HasForeignKey("CookieStandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cookie_stand.Models.HourlySale", "hourly_Sale")
                        .WithMany("cookiStandnHourlysales")
                        .HasForeignKey("HourlySaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cookie_Stand");

                    b.Navigation("hourly_Sale");
                });

            modelBuilder.Entity("cookie_stand.Models.CookieStand", b =>
                {
                    b.Navigation("cookiStandnHourlysales");
                });

            modelBuilder.Entity("cookie_stand.Models.HourlySale", b =>
                {
                    b.Navigation("cookiStandnHourlysales");
                });
#pragma warning restore 612, 618
        }
    }
}
